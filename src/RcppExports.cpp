// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// c_survival
NumericVector c_survival(double alpha, NumericVector offset);
RcppExport SEXP _kwbGompitz_c_survival(SEXP alphaSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type offset(offsetSEXP);
    rcpp_result_gen = Rcpp::wrap(c_survival(alpha, offset));
    return rcpp_result_gen;
END_RCPP
}
// c_limitToRange
NumericVector c_limitToRange(NumericVector x, NumericVector range);
RcppExport SEXP _kwbGompitz_c_limitToRange(SEXP xSEXP, SEXP rangeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type range(rangeSEXP);
    rcpp_result_gen = Rcpp::wrap(c_limitToRange(x, range));
    return rcpp_result_gen;
END_RCPP
}
// c_survival_limit
NumericVector c_survival_limit(double alpha, NumericVector offset, NumericVector range);
RcppExport SEXP _kwbGompitz_c_survival_limit(SEXP alphaSEXP, SEXP offsetSEXP, SEXP rangeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type range(rangeSEXP);
    rcpp_result_gen = Rcpp::wrap(c_survival_limit(alpha, offset, range));
    return rcpp_result_gen;
END_RCPP
}
// c_marginal_survival
NumericVector c_marginal_survival(double alpha, NumericVector t, double bz1, double bz0, double s);
RcppExport SEXP _kwbGompitz_c_marginal_survival(SEXP alphaSEXP, SEXP tSEXP, SEXP bz1SEXP, SEXP bz0SEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type bz1(bz1SEXP);
    Rcpp::traits::input_parameter< double >::type bz0(bz0SEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(c_marginal_survival(alpha, t, bz1, bz0, s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kwbGompitz_c_survival", (DL_FUNC) &_kwbGompitz_c_survival, 2},
    {"_kwbGompitz_c_limitToRange", (DL_FUNC) &_kwbGompitz_c_limitToRange, 2},
    {"_kwbGompitz_c_survival_limit", (DL_FUNC) &_kwbGompitz_c_survival_limit, 3},
    {"_kwbGompitz_c_marginal_survival", (DL_FUNC) &_kwbGompitz_c_marginal_survival, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_kwbGompitz(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
